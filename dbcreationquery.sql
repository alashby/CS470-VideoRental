-- MySQL Script generated by MySQL Workbench
-- Tue Apr 24 10:39:44 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Video_Rental
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Video_Rental
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Video_Rental` DEFAULT CHARACTER SET utf8 ;
USE `Video_Rental` ;

-- -----------------------------------------------------
-- Table `Video_Rental`.`MOVIE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Video_Rental`.`MOVIE` (
  `IMDB_Number` DECIMAL(7,0) UNSIGNED NOT NULL,
  `Title` LONGTEXT NOT NULL,
  `Year` YEAR NOT NULL,
  `Genre` VARCHAR(20) NULL,
  `Rating` VARCHAR(5) NULL,
  `Director` VARCHAR(50) NULL,
  `Summary` LONGTEXT NULL,
  `Runtime` TIME NULL,
  `IMDB_Score` DECIMAL(2,1) UNSIGNED NULL,
  PRIMARY KEY (`IMDB_Number`),
  UNIQUE INDEX `IMDB_Number_UNIQUE` (`IMDB_Number` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Video_Rental`.`CUSTOMER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Video_Rental`.`CUSTOMER` (
  `Customer_ID` DECIMAL(5,0) UNSIGNED NOT NULL,
  `Age` INT UNSIGNED NULL,
  `Fname` VARCHAR(20) NOT NULL,
  `Lname` VARCHAR(20) NOT NULL,
  `Minit` CHAR(1) NULL,
  `Late_fees` DECIMAL NULL,
  PRIMARY KEY (`Customer_ID`),
  UNIQUE INDEX `Customer_ID_UNIQUE` (`Customer_ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Video_Rental`.`PHONE_NUMBER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Video_Rental`.`PHONE_NUMBER` (
  `Custnum` DECIMAL(5,0) UNSIGNED NOT NULL,
  `Number` DECIMAL(10,0) UNSIGNED NOT NULL,
  PRIMARY KEY (`Custnum`, `Number`),
  CONSTRAINT `Custnum`
    FOREIGN KEY (`Custnum`)
    REFERENCES `Video_Rental`.`CUSTOMER` (`Customer_ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Video_Rental`.`HOLD_REQUEST`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Video_Rental`.`HOLD_REQUEST` (
  `IMDB_num` DECIMAL(7,0) UNSIGNED NOT NULL,
  `Cust_ID` DECIMAL(5,0) UNSIGNED NOT NULL,
  `Request_date` DATE NOT NULL,
  PRIMARY KEY (`IMDB_num`, `Cust_ID`, `Request_date`),
  CONSTRAINT `IMDB_num`
    FOREIGN KEY (`IMDB_num`)
    REFERENCES `Video_Rental`.`MOVIE` (`IMDB_Number`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `Cust_ID`
    FOREIGN KEY (`Cust_ID`)
    REFERENCES `Video_Rental`.`CUSTOMER` (`Customer_ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Video_Rental`.`COPY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Video_Rental`.`COPY` (
  `Copy_no` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `IMDB_no` DECIMAL(7,0) UNSIGNED NOT NULL,
  `Due_date` DATE NULL,
  `Renter_no` DECIMAL(5,0) UNSIGNED NULL,
  PRIMARY KEY (`Copy_no`, `IMDB_no`),
  INDEX `IMDB_no_idx` (`IMDB_no` ASC),
  INDEX `Renter_no_idx` (`Renter_no` ASC),
  CONSTRAINT `IMDB_no`
    FOREIGN KEY (`IMDB_no`)
    REFERENCES `Video_Rental`.`MOVIE` (`IMDB_Number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Renter_no`
    FOREIGN KEY (`Renter_no`)
    REFERENCES `Video_Rental`.`CUSTOMER` (`Customer_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Video_Rental`.`ADDRESS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Video_Rental`.`ADDRESS` (
  `Customernum` DECIMAL(5,0) UNSIGNED NOT NULL,
  `Street_number` INT NOT NULL,
  `Street_name` VARCHAR(50) NOT NULL,
  `Apt_no` VARCHAR(50) NO NULL,
  `City` VARCHAR(50) NOT NULL,
  `State` CHAR(2) NOT NULL,
  `Zipcode` VARCHAR(20) NOT NULL,
  `Country` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`Customernum`, `Street_number`, `Street_name`, `Apt_no`, `City`, `State`, `Zipcode`, `Country`),
  CONSTRAINT `Customernum`
    FOREIGN KEY (`Customernum`)
    REFERENCES `Video_Rental`.`CUSTOMER` (`Customer_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `Video_Rental`;

DELIMITER $$
USE `Video_Rental`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Video_Rental`.`MOVIE_BEFORE_INSERT` BEFORE INSERT ON `MOVIE` FOR EACH ROW
BEGIN
	IF not NEW.Rating in ('G', 'PG', 'PG-13', 'R', 'NC-17') THEN
		SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'check constraint on Video_Rental.MOVIE failed';
	END IF;
END$$

USE `Video_Rental`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Video_Rental`.`CUSTOMER_BEFORE_INSERT` BEFORE INSERT ON `CUSTOMER` FOR EACH ROW
BEGIN
IF NEW.Age < 18 THEN
		SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'check constraint on Video_Rental.CUSTOMER failed';
	END IF;
END$$


DELIMITER ;
CREATE USER '00001' IDENTIFIED BY 'password';

GRANT SELECT ON TABLE `Video_Rental`.`MOVIE` TO '00001';
CREATE USER 'Employee1' IDENTIFIED BY 'password';

GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE `Video_Rental`.`COPY` TO 'Employee1';
GRANT DELETE, UPDATE, INSERT, SELECT ON TABLE `Video_Rental`.`CUSTOMER` TO 'Employee1';
GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE `Video_Rental`.`HOLD_REQUEST` TO 'Employee1';
GRANT SELECT ON TABLE `Video_Rental`.`MOVIE` TO 'Employee1';
GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE `Video_Rental`.`PHONE_NUMBER` TO 'Employee1';
GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE `Video_Rental`.`ADDRESS` TO 'Employee1';
CREATE USER 'Manager1' IDENTIFIED BY 'password';

GRANT CREATE, DROP, GRANT OPTION, REFERENCES, ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, TRIGGER ON TABLE `Video_Rental`.`COPY` TO 'Manager1';
GRANT CREATE, DROP, GRANT OPTION, REFERENCES, ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, TRIGGER ON TABLE `Video_Rental`.`CUSTOMER` TO 'Manager1';
GRANT CREATE, DROP, GRANT OPTION, REFERENCES, ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, TRIGGER ON TABLE `Video_Rental`.`HOLD_REQUEST` TO 'Manager1';
GRANT CREATE, DROP, GRANT OPTION, REFERENCES, ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, TRIGGER ON TABLE `Video_Rental`.`MOVIE` TO 'Manager1';
GRANT CREATE, DROP, GRANT OPTION, REFERENCES, ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, TRIGGER ON TABLE `Video_Rental`.`PHONE_NUMBER` TO 'Manager1';
GRANT CREATE, DROP, GRANT OPTION, REFERENCES, ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, TRIGGER ON TABLE `Video_Rental`.`ADDRESS` TO 'Manager1';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
